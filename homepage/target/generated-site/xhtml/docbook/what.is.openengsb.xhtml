<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator"
    content="HTML Tidy for Java (vers. 2009-12-01), see jtidy.sourceforge.net" />
    <meta http-equiv="Content-Type"
    content="text/html; charset=ISO-8859-1" />
    <title>
      Chapter 2. What is the Open Engineering Service Bus
    </title>
    <link rel="stylesheet" href="css/html.css" type="text/css" />
    <meta name="generator"
    content="DocBook XSL-NS Stylesheets V1.75.2" />
    <link rel="home" href="openengsb-manual.html"
    title="OpenEngSB Manual" />
    <link rel="up" href="introduction.manual.html"
    title="Part I. Introduction" />
    <link rel="prev" href="how.to.read.html"
    title="Chapter 1. How to read the Manual" />
    <link rel="next" href="when.to.use.html"
    title="Chapter 3. When to use the OpenEngSB" />
  </head>
  <body bgcolor="white" text="black" link="#0000FF" vlink="#840084"
  alink="#0000FF">
    <div xmlns:fo="http://www.w3.org/1999/XSL/Format" id="top">
      <div id="header">
      </div>
    </div>
    <div class="chapter"
    title="Chapter 2. What is the Open Engineering Service Bus">
      <div class="titlepage">
        <div>
          <div>
            <h2 class="title">
              <a id="what.is.openengsb"
              name="what.is.openengsb"></a>Chapter 2. What is the
              Open Engineering Service Bus
            </h2>
          </div>
        </div>
      </div>
      <p>
        In engineering environments a lot of different tools are
        used. Most of these operate on the same domain, but often
        interoperability is the limiting factor. For each new
        project and team member tool integration has to be repeated
        again. In general, this ends up with numerous
        point-to-point connectors between tools which are neither
        stable solutions nor flexible ones.
      </p>
      <p>
        This is where the Open (Software) Engineering Service Bus
        (OpenEngSB) comes into play. It simplifies design and
        implementation of workflows in an engineering team. The
        engineering team itself (or a process administrator) is
        able to design workflows between different tools. The
        entire description process happens on the layer of generic
        domains instead of specific tool properties. This provides
        an out of the box solution which allows typical engineering
        teams to optimize their processes and make their workflows
        very flexible and easy to change. Also, OpenEngSB
        simplifies the replacement of individual tools and allows
        interdepartmental tool integration.
      </p>
      <p>
        Project management is set to a new level since its possible
        to clearly guard all integrated tools and workflows. This
        offers new ways in notifying managers at the right moment
        and furthermore allows a very general, distanced and
        objective view on a project.
      </p>
      <p>
        Although this concept is very powerful it cannot solve
        every problem. The OpenEngSB is not designed as a general
        graphical layer over an Enterprise Service Bus (ESB) which
        allows you to design ALL of your processes out of the box.
        As long as you work in the designed domains of the
        OpenEngSB you have a lot of graphical support and other
        tools available making your work extremely easy. But when
        leaving the common engineering domains you also leave the
        core scope of the service bus. OpenEngSB still allows you
        to connect your own integration projects, use services and
        react on events, but you have to keep in mind that you're
        working outside the OpenEngSB and "falling back" to
        classical Enterprise Application Integration (EAI) patterns
        and tools.
      </p>
      <p>
        However, this project does not try to reinvent the wheel.
        OpenEngSB will not replace the tools already used for your
        development process, it will integrate them. Our service
        bus is used to connect the different tools and design a
        workflow between them, but not to replace them with yet
        another application. For example, software engineers like
        us love their tools and will fight desperately if you try
        to take them away. We like the wheels as they are, but we
        do not like the way they are put together at the moment.
      </p>
    </div>
    <div xmlns:fo="http://www.w3.org/1999/XSL/Format"
    class="navfooter">
      <hr />
      <table width="100%" summary="Navigation footer">
        <tr>
          <td width="40%" align="left">
            <a accesskey="p" href="how.to.read.html">Prev</a> 
          </td>
          <td width="20%" align="center">
            <a accesskey="h" href="openengsb-manual.html">Home</a>
          </td>
          <td width="40%" align="right">
             <a accesskey="n" href="when.to.use.html">Next</a>
          </td>
        </tr>
        <tr>
          <td width="40%" align="left" valign="top">
            Chapter 1. How to read the Manual 
          </td>
          <td width="20%" align="center">
            <span style="color:white;font-size:85%;"><a
            href="http://openengsb.org/"
            title="OpenEngSB Community">OpenEngSB
            Community</a></span>
          </td>
          <td width="40%" align="right" valign="top">
             Chapter 3. When to use the OpenEngSB
          </td>
        </tr>
      </table>
    </div>
  </body>
</html>
