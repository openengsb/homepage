<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator"
    content="HTML Tidy for Java (vers. 2009-12-01), see jtidy.sourceforge.net" />
    <meta http-equiv="Content-Type"
    content="text/html; charset=ISO-8859-1" />
    <title>
      Chapter 42. Prepare and use Non-OSGi Artifacts
    </title>
    <link rel="stylesheet" href="css/html.css" type="text/css" />
    <meta name="generator"
    content="DocBook XSL-NS Stylesheets V1.75.2" />
    <link rel="home" href="openengsb-manual.html"
    title="OpenEngSB Manual" />
    <link rel="up" href="developer.manual.html"
    title="Part VII. OpenEngSB Commiters &amp; Contributors" />
    <link rel="prev" href="developer.howto.internal.domain.html"
    title="Chapter 41. How To Create an Internal Domain" />
    <link rel="next" href="developer.release.html"
    title="Chapter 43. Release and Release Process" />
  </head>
  <body bgcolor="white" text="black" link="#0000FF" vlink="#840084"
  alink="#0000FF">
    <div xmlns:fo="http://www.w3.org/1999/XSL/Format" id="top">
      <div id="header">
      </div>
    </div>
    <div class="chapter"
    title="Chapter 42. Prepare and use Non-OSGi Artifacts">
      <div class="titlepage">
        <div>
          <div>
            <h2 class="title">
              <a id="developer.wrapped"
              name="developer.wrapped"></a>Chapter 42. Prepare and
              use Non-OSGi Artifacts
            </h2>
          </div>
        </div>
      </div>
      <p>
        Basically, wrapped JARs do not differ in any way from basic
        jars, besides that they are deployable in OSGi
        environments. They are used as regular jar files in the
        OpenEngSB. Nevertheless, the wrapping itself is not as
        painless. This chapter tries to explain the process in
        detail.
      </p>
      <div class="section" title="42.1. Create Wrapped Artifacts">
        <div class="titlepage">
          <div>
            <div>
              <h2 class="title" style="clear: both">
                <a id="developer.wrapped.base"
                name="developer.wrapped.base"></a>42.1. Create
                Wrapped Artifacts
              </h2>
            </div>
          </div>
        </div>
        <p>
          This chapter is a step by step guide on how to create a
          wrapped JAR.
        </p>
        <div class="orderedlist">
          <ol class="orderedlist" type="1">
            <li class="listitem">
              <p>
                In case that no osginized library is available in
                the public repositories a package has to be
                created. Because of the simplicity of the process
                it should be done by hand. First of all create a
                folder with the name of the project you like to
                wrap within openengsb/wrapped. Typically the
                groupId of the bundle to wrap is sufficient. For
                example, for a project wrapping all Wicket bundles
                the folder org.apache.wicket is created.
              </p>
            </li>
            <li class="listitem">
              <p>
                As a next step add the newly created folder as a
                module to the openengsb/wrapped/pom.xml file in the
                module section. For the formerly created Wicket
                project org.apache.wicket should be added to the
                module section.
              </p>
            </li>
            <li class="listitem">
              <p>
                Now create a pom.xml file in the newly created
                project folder.
              </p>
            </li>
            <li class="listitem">
              <p>
                The pom.xml contains the basic project information.
                As parent for the project the wrapped/pom.xml
                should be used. Basically for every wrapped jar the
                project has the following structure:
              </p>
<pre xml:space="preserve" class="programlisting">
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!--
OPENENGSB LICENSE
--&gt;
&lt;project&gt;

  &lt;parent&gt;
    &lt;groupId&gt;org.openengsb.wrapped&lt;/groupId&gt;
    &lt;artifactId&gt;openengsb-wrapped&lt;/artifactId&gt;
    &lt;version&gt;1&lt;/version&gt;
  &lt;/parent&gt;

  &lt;properties&gt;
    &lt;bundle.symbolicName&gt;wrapped_jar_group_id&lt;/bundle.symbolicName&gt;
    &lt;wrapped.groupId&gt;wrapped_jar_group_id&lt;/wrapped.groupId&gt;
    &lt;wrapped.artifactId&gt;wrapped_jar_artifact_id&lt;/wrapped.artifactId&gt;
    &lt;wrapped.version&gt;wrapped_jar_version&lt;/wrapped.version&gt;
    &lt;bundle.namespace&gt;${wrapped.groupId}&lt;/bundle.namespace&gt;
  &lt;/properties&gt;

  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
  &lt;groupId&gt;${wrapped.groupId}&lt;/groupId&gt;
  &lt;artifactId&gt;org.openengsb.docs.${wrapped.groupId}&lt;/artifactId&gt;
  &lt;version&gt;${wrapped.version}&lt;/version&gt;

  &lt;name&gt;${bundle.symbolicName}&lt;/name&gt;

  &lt;packaging&gt;bundle&lt;/packaging&gt;

  &lt;dependencies&gt;
    &lt;all_jars_which_should_be_embedded /&gt;
  &lt;/dependencies&gt;

&lt;/project&gt;
</pre>
            </li>
            <li class="listitem">
              <p>
                Now add the OSGi specific statements for the
                maven-bundle-plugin. While the default export and
                import are already handled in the root pom project
                specific settings have to be configured here. For
                example all packages within the bundle-namespace
                are always exported. This is for most scenarios
                sufficient. In addition all dependencies found are
                automatically imported as required. This is
                generally not desired. Instead the parts of the
                library which have to be imported should be defined
                separately. The following listing gives a short
                example how this OSGI specific part can look like.
                For a full list of possible commands see the <a
                class="link"
                href="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html"
                 target="_top">maven-bundle-plugin
                documentation</a>.
              </p>
<pre xml:space="preserve" class="programlisting">
            &lt;?xml version="1.0" encoding="UTF-8"?&gt;
            &lt;build&gt;
              ...
               &lt;plugins&gt;
                ...
                &lt;plugin&gt;
                  &lt;groupId&gt;org.apache.felix&lt;/groupId&gt;
                  &lt;artifactId&gt;maven-bundle-plugin&lt;/artifactId&gt;
                  &lt;extensions&gt;true&lt;/extensions&gt;
                  &lt;configuration&gt;
                    &lt;instructions&gt;
                      &lt;Import-Package&gt;sun.misc;resolution:=optional,
                          javax.servlet;version="[2.5.0, 3.0.0)",
                          *;resolution:=optional
                      &lt;/Import-Package&gt;
                    &lt;/instructions&gt;
                  &lt;/configuration&gt;
                &lt;/plugin&gt;
              &lt;/plugins&gt;
            &lt;/build&gt;
            &lt;/project&gt;
         
</pre>
            </li>
          </ol>
        </div>
      </div>
      <div class="section" title="42.2. Tips and Tricks">
        <div class="titlepage">
          <div>
            <div>
              <h2 class="title" style="clear: both">
                <a id="d0e3701" name="d0e3701"></a>42.2. Tips and
                Tricks
              </h2>
            </div>
          </div>
        </div>
        <p>
          Although the description above sounds quite simple (and
          wrapping bundles is simple mostly) still some nasty
          problems can occur. This section summarizes good tips and
          ideas how to wrap bundles within the OpenEngSB.
        </p>
        <div class="itemizedlist">
          <ul class="itemizedlist" type="disc">
            <li class="listitem">
              The best workflow to wrap a bundle is according to
              our experiences, to execute the previously described
              steps and simply start the OpenEngSB
              (openengsb:provision). Either it works or creates a
              huge stack of exceptions with missing import
              statements. Simply try to fulfill one problem, than
              start again till all references are resolved.
            </li>
            <li class="listitem">
              Embedding artifacts is nothing bad. Although it is
              recommended to use all references artifacts of a
              bundle directly as OSGi components it can be such a
              pain sometimes. Some references are simply not
              required by any other bundle or are too hard to port.
              In such cases feel free to directly embed the
              dependencies in the wrapped jar.
            </li>
          </ul>
        </div>
      </div>
    </div>
    <div xmlns:fo="http://www.w3.org/1999/XSL/Format"
    class="navfooter">
      <hr />
      <table width="100%" summary="Navigation footer">
        <tr>
          <td width="40%" align="left">
            <a accesskey="p"
            href="developer.howto.internal.domain.html">Prev</a> 
          </td>
          <td width="20%" align="center">
            <a accesskey="h" href="openengsb-manual.html">Home</a>
          </td>
          <td width="40%" align="right">
             <a accesskey="n"
            href="developer.release.html">Next</a>
          </td>
        </tr>
        <tr>
          <td width="40%" align="left" valign="top">
            Chapter 41. How To Create an Internal Domain 
          </td>
          <td width="20%" align="center">
            <span style="color:white;font-size:85%;"><a
            href="http://openengsb.org/"
            title="OpenEngSB Community">OpenEngSB
            Community</a></span>
          </td>
          <td width="40%" align="right" valign="top">
             Chapter 43. Release and Release Process
          </td>
        </tr>
      </table>
    </div>
  </body>
</html>
