<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator"
    content="HTML Tidy for Java (vers. 2009-12-01), see jtidy.sourceforge.net" />
    <meta http-equiv="Content-Type"
    content="text/html; charset=ISO-8859-1" />
    <title>
      Chapter 43. Release and Release Process
    </title>
    <link rel="stylesheet" href="css/html.css" type="text/css" />
    <meta name="generator"
    content="DocBook XSL-NS Stylesheets V1.75.2" />
    <link rel="home" href="openengsb-manual.html"
    title="OpenEngSB Manual" />
    <link rel="up" href="developer.manual.html"
    title="Part VII. OpenEngSB Commiters &amp; Contributors" />
    <link rel="prev" href="developer.wrapped.html"
    title="Chapter 42. Prepare and use Non-OSGi Artifacts" />
    <link rel="next" href="developer.admin.html"
    title="Chapter 44. Admin" />
  </head>
  <body bgcolor="white" text="black" link="#0000FF" vlink="#840084"
  alink="#0000FF">
    <div xmlns:fo="http://www.w3.org/1999/XSL/Format" id="top">
      <div id="header">
      </div>
    </div>
    <div class="chapter"
    title="Chapter 43. Release and Release Process">
      <div class="titlepage">
        <div>
          <div>
            <h2 class="title">
              <a id="developer.release"
              name="developer.release"></a>Chapter 43. Release and
              Release Process
            </h2>
          </div>
        </div>
      </div>
      <p>
        This section provides a step by step description to execute
        a release of the OpenEngSB. It is relevant for everyone
        marked in the <a class="link"
        href="http://openengsb.org/team-list.html"
        target="_top">OpenEngSB Team List</a> as release manager
        because only they have the required rights to execute the
        following steps.
      </p>
      <div class="section"
      title="43.1. Releases and the OpenEngSB">
        <div class="titlepage">
          <div>
            <div>
              <h2 class="title" style="clear: both">
                <a id="d0e3720" name="d0e3720"></a>43.1. Releases
                and the OpenEngSB
              </h2>
            </div>
          </div>
        </div>
        <p>
          Every release of the OpenEngSB consists of the following
          parts: RELEASE.MAJOR.MINOR.TYPE. Every release of this
          type is available at <a class="link"
          href="http://repo1.maven.org/maven2/" target="_top">Maven
          Central</a>. Optionally SNAPSHOT is appended. Snapshot
          releases are available from the <a class="link"
          href="https://oss.sonatype.org/content/groups/public/"
          target="_top">Sonatype Snapshot repository</a>. This
          section explains what each modifier means and how it is
          used within the OpenEngSB.
        </p>
        <p>
          SNAPSHOTS: Snapshots are always available from the latest
          build of the OpenEngSB. They are taken from the master
          branch automatically at each commit.
        </p>
        <p>
          TYPE: Type could be MX, RCX or RELEASE, where X is a
          number. While RELEASE marks a final release, ready for
          use in your production environment, M and RC are
          typically not ready for production. M stands for
          Milestone release and is cut every two weeks to present
          the current state of the OpenEngSB and allow a coarse
          grained planning and roadmap for the OpenEngSB team. RC,
          release candidates, are handled differently. After
          everything is finished and the OpenEngSB teams think that
          the current work is ready for a release, we provide a
          release candidate and invite everyone to test the
          release. If there are any issues with the release we fix
          them and provide another release candidate. During this
          process no new features, but only bug fixes are handled.
          We continue this process as long as there are no new bug
          reports for a RC for two weeks. Then we re-release the
          latest release candidate as final release. This process
          only applies for RELEASE and MAJOR. MINOR is handled
          differently, as explained later on.
        </p>
        <p>
          RELEASE is a increasing number used for mayor changes
          within the OpenEngSB architecture. In addition all
          methods and interfaces marked as deprecated are removed
          during such a release. It is also possible that a RELEASE
          does not enhance any mayor architectural concept but is
          only used to get rid of all the deprecated methods,
          generated during MAJOR releases.
        </p>
        <p>
          MAJOR is the main feature development number of the
          OpenEngSB. Each release containing new features will be a
          MAJOR release. Nevertheless, between MAJOR releases
          architectural concepts are not removed but only set to
          deprecated. This means they only enhance functionality
          but try to not break with former releases.
        </p>
        <p>
          MINOR releases are bug-fix releases. They do not include
          any new features but only fix bugs within the OpenEngSB.
          They have no release plan, but are simply cut after each
          bug-fix.
        </p>
        <p>
          To visualize the explained process the following example.
          Assume we have released openengsb-1.0.0.RELEASE. Now
          we're working on openengsb-1.1.0.RELEASE. Therefore we
          start developing openengsb-1.1.0.M1 which will be
          released in two weeks. During the development of 1.1.0.M1
          a bug occurs at openengsb-1.0.0.RELEASE. During the
          development the bug is fixed and openengsb-1.0.1.RELEASE
          is released. After 1.1.0.M1 we require three additional
          milestone releases to get feature releases. Six weeks
          after 1.1.0.M1 we'll release 1.1.0.RC1. From now on we
          continue to develop 1.2.0.M1 (or 2.0.0.M1, depending on
          the gravity of the changes) and wait for feedback on
          1.1.0.RC1. Now a bug-report occurs for 1.0.1.RELEASE. We
          fix the bug, release 1.0.2.RELEASE with the fix. If it
          also affects 1.1.0.RC1, we fix the bug there too and
          release 1.1.0.RC2 (still working on 1.2.0.M1(!)). Now
          assume that some other bug reports are received for
          1.0.0.RC2. We fix them and release 1.1.0.RC3. In the
          meantime we finished 1.2.0.M1 and start work on 1.2.0.M2.
          Now two weeks after the release of 1.1.0.RC3 without any
          new bug-reports we re-release 1.1.0.RC3 to 1.1.0.RELEASE
          (starting the game again from the beginning).
        </p>
      </div>
      <div class="section" title="43.2. Git Branches">
        <div class="titlepage">
          <div>
            <div>
              <h2 class="title" style="clear: both">
                <a id="d0e3743" name="d0e3743"></a>43.2. Git
                Branches
              </h2>
            </div>
          </div>
        </div>
        <p>
          For the best cooperation between Git and Maven the
          OpenEngSB team has developed its own workflow with
          branches during releases. For different project phases
          (milestone, RC, final, support) different workflows
          apply.
        </p>
        <div class="section" title="43.2.1. New Feature Workflow">
          <div class="titlepage">
            <div>
              <div>
                <h3 class="title">
                  <a id="d0e3748" name="d0e3748"></a>43.2.1. New
                  Feature Workflow
                </h3>
              </div>
            </div>
          </div>
          <p>
            For new features the already described workflow apply.
            This means create a feature branch based on the
            integration branch, add your commits and create a pull
            request if you're finished. Your changes will be merged
            (after review) to the integration branch. From time to
            time the integration branch ins merged into the master,
            which is pushed as snapshots to sonatype.
          </p>
        </div>
        <div class="section" title="43.2.2. Milestone Releases">
          <div class="titlepage">
            <div>
              <div>
                <h3 class="title">
                  <a id="d0e3753"
                  name="d0e3753"></a>43.2.2. Milestone Releases
                </h3>
              </div>
            </div>
          </div>
          <p>
            For milestone releases about one day before a planned
            release a openensb-1.X.0-release branch is created.
            This branch can be forward merged to integration as
            often as liked (no backward merges are allowed). If all
            final bugs and changes are done the MX version is
            released on this branch and the branch is merged into
            integration and deleted again. During this process any
            number of new features are merged into integration,
            without affecting the release any longer.
          </p>
        </div>
        <div class="section" title="43.2.3. Release Candidates">
          <div class="titlepage">
            <div>
              <div>
                <h3 class="title">
                  <a id="d0e3758"
                  name="d0e3758"></a>43.2.3. Release Candidates
                </h3>
              </div>
            </div>
          </div>
          <p>
            RCs are the pre-level for final releases. This means,
            after the openengsb team decides a release is ready to
            go, two new branch are created from the latest commit
            AFTER the milestone release (where the mvn versions are
            set back to the snapshot version): openengsb-1.X.x-dev
            and openengsb-1.X.x-release. openengsb-1.X.x-dev is
            used for bug-fixes. Every fix which should also be
            merged into the integration branch/master should be
            branched off openengsb-1.X.x-dev and afterewards merged
            into integration and openengsb-1.X.x-dev. If a release
            is ready openengsb-1.X.x-dev is merged into
            openengsb-1.X.x-release, where the release takes place.
            BUT no merge from openengsb-1.X.x-release to
            openengsb-1.X.x-release is allowed!
          </p>
        </div>
        <div class="section"
        title="43.2.4. Final and Support Releases">
          <div class="titlepage">
            <div>
              <div>
                <h3 class="title">
                  <a id="d0e3763" name="d0e3763"></a>43.2.4. Final
                  and Support Releases
                </h3>
              </div>
            </div>
          </div>
          <p>
            All support and final releases are handled exactly as
            the RC releases between the openengsb-1.X.x-dev and
            openengsb-1.X.x-release branch.
          </p>
        </div>
      </div>
      <div class="section" title="43.3. Configure Maven">
        <div class="titlepage">
          <div>
            <div>
              <h2 class="title" style="clear: both">
                <a id="developer.release.configuremaven"
                name="developer.release.configuremaven"></a>43.3. Configure
                Maven
              </h2>
            </div>
          </div>
        </div>
        <p>
          For the right rights to deploy to maven central and
          upload maven site to openengsb.org the following entries
          are required in your ~/.m2/settings.xml file:
        </p>
<pre xml:space="preserve" class="programlisting">
&lt;settings&gt;
  &lt;server&gt;
    &lt;id&gt;sonatype-nexus-snapshots&lt;/id&gt;
    &lt;username&gt;SONATYPE_USERNAME&lt;/username&gt;
    &lt;password&gt;SONATYPE_PASSWORD&lt;/password&gt;
  &lt;/server&gt;
  &lt;server&gt;
    &lt;id&gt;sonatype-nexus-staging&lt;/id&gt;
    &lt;username&gt;SONATYPE_USERNAME&lt;/username&gt;
    &lt;password&gt;SONATYPE_PASSWORD&lt;/password&gt;
  &lt;/server&gt;
  &lt;server&gt;
    &lt;id&gt;OpenengsbWebServer&lt;/id&gt;
    &lt;username&gt;OPENENGSB_SERVER_USERNAME&lt;/username&gt;
    &lt;password&gt;OPENEGNSB_SERVER_PASSWORD&lt;/password&gt;
  &lt;/server&gt;
  &lt;profiles&gt;
    &lt;profile&gt;
      &lt;id&gt;milestone&lt;/id&gt;
      &lt;properties&gt;
        &lt;gpg.passphrase&gt;GPG_PASSPHRASE&lt;/gpg.passphrase&gt;
      &lt;/properties&gt;
    &lt;/profile&gt;
    &lt;profile&gt;
      &lt;id&gt;release&lt;/id&gt;
      &lt;properties&gt;
        &lt;gpg.passphrase&gt;GPG_PASSPHRASE&lt;/gpg.passphrase&gt;
      &lt;/properties&gt;
    &lt;/profile&gt;
    &lt;profile&gt;
      &lt;id&gt;final&lt;/id&gt;
      &lt;properties&gt;
        &lt;gpg.passphrase&gt;GPG_PASSPHRASE&lt;/gpg.passphrase&gt;
      &lt;/properties&gt;
    &lt;/profile&gt;
  &lt;/profiles&gt;
&lt;settings&gt;
</pre>
        <p>
          All the usernames and passwords can be retrieved from
          someone marked as administrator in the <a class="link"
          href="http://openengsb.org/team-list.html"
          target="_top">OpenEngSB Team List</a>.
        </p>
        <p>
          In addition you have to have a GPG key for your mail
          address (the same you're using to commit to the OpenEngSB
          source repository which is uploaded to the <a
          class="link" href="hkp://pgp.mit.edu/" target="_top">MIT
          Key Server</a>.
        </p>
      </div>
      <div class="section" title="43.4. Adapt Jira">
        <div class="titlepage">
          <div>
            <div>
              <h2 class="title" style="clear: both">
                <a id="d0e3785" name="d0e3785"></a>43.4. Adapt Jira
              </h2>
            </div>
          </div>
        </div>
        <p>
          A word in front, how Jira is used for the OpenEngSB. Jira
          is used for bug tracking and release planning. ONLY each
          Milestone release has its own target. Release candidates
          and final releases are handled differently. Since we
          release RC and MINOR releases quite often its much too
          much administration work to keep JIRA up to date.
        </p>
        <p>
          Ok, knowing that the release process is simple:
        </p>
        <div class="itemizedlist">
          <ul class="itemizedlist" type="disc">
            <li class="listitem">
              If you release a milestone release close the release
              target (e.g. 1.0.0.M1)
            </li>
            <li class="listitem">
              If you release a release candidate create a
              VERSION.RCX release target and close the old one.
            </li>
            <li class="listitem">
              If you release a final release (MAJOR RELEASE) create
              a new release target 1.0.X.RELEASE.
            </li>
            <li class="listitem">
              If you release a minor release close the
              1.0.X.RELEASE target and create 1.0.(X+1).RELEASE.
            </li>
          </ul>
        </div>
      </div>
      <div class="section" title="43.5. Perform the release">
        <div class="titlepage">
          <div>
            <div>
              <h2 class="title" style="clear: both">
                <a id="d0e3801" name="d0e3801"></a>43.5. Perform
                the release
              </h2>
            </div>
          </div>
        </div>
        <p>
          Performing a release is quite simple, because of the
          maven release plugin and some scripts. Simple follow
          these steps:
        </p>
        <div class="itemizedlist">
          <ul class="itemizedlist" type="disc">
            <li class="listitem">
              First of all make sure that the NOTICE file is
              up-to-date using notice:generate
            </li>
            <li class="listitem">
              Now invoke <span class="command"><strong>mvn
              openengsb:release{Final|Milestone|Support|RC}
              -DconnectionUrl=path/to/your/repo</strong></span>
              (e.g. mvn openengsb:releaseMilestone
              -DconnectionUrl=scm:git:file://~/openengsb)
            </li>
            <li class="listitem">
              After the artifacts are available for sync to maven
              central you have to push them from the staging to the
              final repository. Therefore follow the steps as
              explained <a class="link"
              href="https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide"
               target="_top">here</a>
            </li>
            <li class="listitem">
              If everything works fine execute git push;git push
              --tags
            </li>
          </ul>
        </div>
      </div>
      <div class="section" title="43.6. Spread the News">
        <div class="titlepage">
          <div>
            <div>
              <h2 class="title" style="clear: both">
                <a id="d0e3820" name="d0e3820"></a>43.6. Spread the
                News
              </h2>
            </div>
          </div>
        </div>
        <p>
          Post a message to the OpenEngSB twitter account with the
          following content:
        </p>
<pre xml:space="preserve" class="programlisting">
openengsb-VERSION "NAME" released, closing XX issues (JIRA_RELEASE_REPORT_SHORT_URL).
  Try the new features now: http://openengsb.org
</pre>
        <p>
          Mails in this case are not only used for notification but
          also to get the developers and users to try a new release
          and report issues and problems. Therefore, we use
          different templates for different types of releases of
          the project.
        </p>
        <p>
          The following template shows a copy and paste template
          for mails send for a release candidate. This mail should
          only be sent to the developer mailing list:
        </p>
<pre xml:space="preserve" class="programlisting">
Hey guys,

I've just uploaded openengsb-1.0.0.RC4 to maven central (Should be available
within the next hour).

Sources can be downloaded here:

https://github.com/openengsb/openengsb/zipball/openengsb-1.0.0.RC4

The binary release can be downloaded here:

http://repo1.maven.org/maven2/org/openengsb/openengsb/1.0.0.RC4/openengsb-1.0.0.RC4.zip

Between openengsb-1.0.0.RC3 and openegnsb-1.0.0.RC4 we've fixed the following
issues:

** Bug
  * [OPENENGSB-548] - jetty7 - felix problems 
  * [OPENENGSB-605] - Use png as favicon for openengsb war file and script

** Improvement
  * [OPENENGSB-603] - Context has to be stored persistently and
  * restored on system startup
  * [OPENENGSB-610] - Maven connector has to support the execution of a configurable command

** Task
  * [OPENENGSB-606] - update docs new jira release 

** TBD
  * [OPENENGSB-589] - document release process for stable branches

Please give it a try and report all problems you encounter here:

http://issues.openengsb.org/jira/browse/OPENENGSB/fixforversion/10142

If there are no new issues reported within the next 72 hours I set RC4 as the
final release 1.0.0.RELEASE.

Kind regards,
andreas
</pre>
      </div>
      <div class="section" title="43.7. Prepare Changelog">
        <div class="titlepage">
          <div>
            <div>
              <h2 class="title" style="clear: both">
                <a id="d0e3834" name="d0e3834"></a>43.7. Prepare
                Changelog
              </h2>
            </div>
          </div>
        </div>
        <p>
          The changelog is a file to inform users about the changes
          in the version they are using. This file should only
          contain the releases which are done in one branch. E.g.
          the master will never contain changelog about minor
          releases; because of the way we handle Jira those changes
          are captured and included anyhow.
        </p>
        <p>
          Now the CHANGELOG.md file has to be updated. Therefore
          the following template with the correct version have to
          be copied in the current changelog file (the latest
          version always has the most "on-top" position in the text
          file):
        </p>
<pre xml:space="preserve" class="programlisting">
openengsb-VERSION
------------------

Add a General Description

### Highlights
  * [e.g.] org.openengsb.domain.scm.doSomething() is removed

### Details

Copy JIRA issues here
</pre>
        <p>
          The following sections explain shortly what changes
          belong to which part of the changelog.
        </p>
        <div class="section" title="43.7.1. General Description">
          <div class="titlepage">
            <div>
              <div>
                <h3 class="title">
                  <a id="d0e3845"
                  name="d0e3845"></a>43.7.1. General Description
                </h3>
              </div>
            </div>
          </div>
          <p>
            The general description summarizes the most important
            changes in this release. This is a short and verbal
            description of the changes.
          </p>
        </div>
        <div class="section" title="43.7.2. Highlights">
          <div class="titlepage">
            <div>
              <div>
                <h3 class="title">
                  <a id="d0e3850"
                  name="d0e3850"></a>43.7.2. Highlights
                </h3>
              </div>
            </div>
          </div>
          <p>
            The highlight section could be a little bit more
            detailed than the general description. Things which
            should be changed by developers could be explained here
            and other important points could be lined up here.
          </p>
        </div>
        <div class="section" title="43.7.3. Details">
          <div class="titlepage">
            <div>
              <div>
                <h3 class="title">
                  <a id="d0e3855"
                  name="d0e3855"></a>43.7.3. Details
                </h3>
              </div>
            </div>
          </div>
          <p>
            The details section contains a copy of the release
            notes generated by Jira if a developer wants to take a
            detailed look at the changes included in this release.
          </p>
        </div>
      </div>
    </div>
    <div xmlns:fo="http://www.w3.org/1999/XSL/Format"
    class="navfooter">
      <hr />
      <table width="100%" summary="Navigation footer">
        <tr>
          <td width="40%" align="left">
            <a accesskey="p"
            href="developer.wrapped.html">Prev</a> 
          </td>
          <td width="20%" align="center">
            <a accesskey="h" href="openengsb-manual.html">Home</a>
          </td>
          <td width="40%" align="right">
             <a accesskey="n" href="developer.admin.html">Next</a>
          </td>
        </tr>
        <tr>
          <td width="40%" align="left" valign="top">
            Chapter 42. Prepare and use Non-OSGi Artifacts 
          </td>
          <td width="20%" align="center">
            <span style="color:white;font-size:85%;"><a
            href="http://openengsb.org/"
            title="OpenEngSB Community">OpenEngSB
            Community</a></span>
          </td>
          <td width="40%" align="right" valign="top">
             Chapter 44. Admin
          </td>
        </tr>
      </table>
    </div>
  </body>
</html>
