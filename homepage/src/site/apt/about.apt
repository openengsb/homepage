~~
~~ Licensed to the Austrian Association for Software Tool Integration (AASTI)
~~ under one or more contributor license agreements. See the NOTICE file
~~ distributed with this work for additional information regarding copyright
~~ ownership. The AASTI licenses this file to you under the Apache License,
~~ Version 2.0 (the "License"); you may not use this file except in compliance
~~ with the License. You may obtain a copy of the License at
~~
~~     http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~

About OpenEngSB

  In engineering environments a lot of different tools are used. Most of these
 operate on the same domain, but often interoperability is the limiting factor.
 For each new project and team member tool integration has to be repeated again.
 In general, this ends up with numerous point-to-point connectors between tools
 which are neither stable solutions nor flexible ones.

  This is the point where the Open (Software) Engineering Service Bus (OpenEngSB)
 comes into play. It simplifies design and implementation of workflows in an
 engineering team. The engineering team itself (or a process administrator) is
 able to design workflows between different tools. The entire description process
 happens on the layer of generic domains instead of specific tool properties.
 This provides an out of the box solution which allows typical engineering teams
 to optimize their processes and make their workflows very flexible and easy to
 change. Also, OpenEngSB simplifies the replacement of individual tools and allows
 interdepartmental tool integration.

  Project management is set to a new level since its possible to clearly guard
 all integrated tools and workflows. This offers new ways in notifying managers
 at the right moment and furthermore allows a very general, distanced and
 objective view on a project.

  Although this concept is very powerful it cannot solve every problem. The
 OpenEngSB is not designed as a general graphical layer over an Enterprise
 Service Bus (ESB) which allows you to design ALL of your processes out of the
 box. As long as you work in the designed domains of the OpenEngSB you have a lot
 of graphical support and other tools available making your work extremely easy.
 But when leaving the common engineering domains you also leave the core scope
 of the service bus. OpenEngSB still allows you to connect your own integration
 projects, use services and react on events, but you have to  keep in mind that
 you're working outside the OpenEngSB and "falling back" to classical Enterprise
 Application Integration (EAI) patterns and tools.

  However, this project does not try to reinvent the wheel. OpenEngSB will not
 replace the tools already used for your development process, it will integrate
 them. Our service bus is used to connect the different tools and design a workflow
 between them, but not to replace them with yet another application.
 For example, software engineers like us love their tools and will fight
 desperately if you try to take them away.  We like the wheels as they are,
 but we do not like the way they are put together at the moment.

Features

  The OpenEngSB comes with the following features out of the box:

  * Abstract tool integration for mail, scm, issue tracking, build, test, deploy, auditing, 
    reporting and microblogging. In detail we support the following tools: Mail, Twitter, 
    Facebook, JIRA, Git and Maven with more to come.

  * Modular UI presenting the state of the OpenEngSB and its installed modules.

  * Completely integrated workflow and rule management.

  * Very modular, powerful and reusable system based on OSGi.

  * Full control over the system using console and ssh to connect to it; thanks to Apache Karaf

Further Information

 See the {{{./reference/index.html}Userguide}}, participate in the
 {{{./mail-lists.html}Mailing lists}} or directly dive into the
 {{{./source-repository.html}Source Code}}.
